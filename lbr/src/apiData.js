var apiData =
  [
    {"platform":"codingbat","lng":"Java","module":"AP-1","title":"AP-1","dsc":"java\/ap-1\/scores100,Scores100;java\/ap-1\/scoresincreasing,ScoresIncreasing;java\/ap-1\/scoreup,ScoreUp;java\/ap-1\/sumheights,SumHeights;java\/ap-1\/wordscount,WordsCount;java\/ap-1\/wordsfront,WordsFront;java\/ap-1\/wordswithoutlist,WordsWithoutList","code":"","permLink":"ap-1","hasCode":"0","platform_url":""},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"Arrays","dsc":"java\/arrays\/arrays3,Arrays3;java\/arrays\/canbalance,CanBalance;java\/arrays\/countclumps,CountClumps;java\/arrays\/fix34,Fix34;java\/arrays\/fix45,Fix45;java\/arrays\/lonesum,LoneSum;java\/arrays\/noteensum,NoTeenSum;java\/arrays\/roundsum,RoundSum;java\/arrays\/seriesup,SeriesUp;java\/arrays\/squareup,SquareUp","code":"","permLink":"arrays","hasCode":"0","platform_url":""},
    {"platform":"codingbat","lng":"Java","module":"String","title":"String","dsc":"java\/string\/counttriple3,CountTriple3;java\/string\/countyz,CountYZ;java\/string\/equalisnot,EqualIsNot;java\/string\/maxblock,MaxBlock;java\/string\/mirrorends,MirrorEnds;java\/string\/sameends,SameEnds;java\/string\/sumdigits,SumDigits;java\/string\/sumnumbers,SumNumbers;java\/string\/withoutstring,WithoutString","code":"","permLink":"string","hasCode":"0","platform_url":""},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"Arrays3","dsc":"Given two arrays of ints sorted in increasing order, outer and inner,\r\nreturn true if all of the numbers in inner appear in outer.\r\nThe best solution makes only a single \"linear\" pass of both arrays,\r\ntaking advantage of the fact that both arrays are already in sorted order. ","code":"public boolean linearIn(int[] outer, int[] inner)\r\n{\r\n  int flag = 0;\r\n\r\n  for(int i =0; i < inner.length; i++)\r\n  {\r\n\r\n    for(int j=0; j < outer.length;j++)\r\n    {\r\n         if(inner[i] == outer[j])\r\n         {\r\n           flag++;\r\n            break;\r\n          }\r\n    }\r\n\r\n  }\r\n\r\n  return flag == inner.length;\r\n}","permLink":"java\/arrays\/arrays3","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"CanBalance","dsc":"Given a non-empty array, return true if there is a place to split the array so that\r\nthe sum of the numbers on one side is equal to the sum of the numbers on the other side.","code":"public boolean canBalance(int[] nums)\r\n{\r\n  int sum1 =0;\r\n  int sum2 = 0;\r\n  for(int i =0; i < nums.length;i++)\r\n  {\r\n      sum1 += nums[i];\r\n      sum2 =0;\r\n      for(int j= i +1; j < nums.length;j++)\r\n      {\r\n\t      sum2+= nums[j];\r\n\r\n      }\r\n\r\n     if(sum1 == sum2) return true;\r\n\r\n  }\r\n\r\n  return  false;\r\n}","permLink":"java\/arrays\/canbalance","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"CountClumps","dsc":"Say that a \"clump\" in an array is a series of 2 or more adjacent elements of the same value.\r\nReturn the number of clumps in the given array. ","code":"public int countClumps(int[] nums)\r\n{\r\n    ArrayList arr = new ArrayList();\r\n    int count =0;\r\n    int idx = 0;\r\n\r\n\tfor(int i=0; i < nums.length; i++)\r\n\t{\r\n           count =0;\r\n\t   for(int j=i; j < nums.length;j++)\r\n\t   {\r\n              idx = j;\r\n\t      if(nums[i] == nums[j])  ++count;\r\n\t      else break;\r\n\t   }\r\n\r\n\t   if(count >= 2)\r\n           {\r\n             arr.add(i);\r\n             i = idx-1;\r\n            }\r\n\r\n\t}\r\n\r\n\treturn arr.size();\r\n}","permLink":"java\/arrays\/countclumps","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"String","title":"CountTriple3","dsc":"We'll say that a \"triple\" in a string is a char appearing three times in a row.\r\nReturn the number of triples in the given string. The triples may overlap. ","code":"public int countTriple(String str)\n{\n\n  int ct = 0;\n\n\n  for(int i =0; i < str.length(); i++)\n  {\n\n       for(int j= i; j <str.length();j++)\n       {\n          if(str.charAt(i) == str.charAt(j))\n          {\n             if(i+2 == j) ct++;\n          }\n\n          else break;\n       }\n  }\n\n\n  return ct;\n}","permLink":"java\/string\/counttriple3","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"String","title":"CountYZ","dsc":"Given a string, count the number of words ending in 'y' or 'z'\r\n-- so the 'y' in \"heavy\" and the 'z' in \"fez\" count, but not the\r\n'y' in \"yellow\" (not case sensitive). We'll say that a y or z is at\r\nthe end of a word if there is not an alphabetic letter immediately following it.\r\n(Note: Character.isLetter(char) tests if a char is an alphabetic letter.)","code":"public int countYZ(String str)\n{\n  int idx = 0;\n  int track =0;\n  int len = str.length();\n\n  while (idx != -1)\n  {\n     idx = str.toUpperCase().indexOf(\"Y\",idx);\n\n         if(idx != -1)\n         {\n\n                if(idx +1 == len)\n                {\n                   ++track;\n                   idx = -1;\n                }\n\n                else\n                {\n                   if(!Character.isLetter(str.charAt(idx+1))) ++track;\n                   ++idx;\n                }\n         }\n\n  }\n\n  idx =0;\n  while (idx != -1)\n  {\n     idx = str.toUpperCase().indexOf(\"Z\",idx);\n\n         if(idx != -1)\n         {\n\n                if(idx +1 == len)\n                {\n                   ++track;\n                   idx = -1;\n                }\n\n                else\n                {\n                   if(!Character.isLetter(str.charAt(idx+1))) ++track;\n                   ++idx;\n                }\n         }\n\n  }\n  return track;\n }","permLink":"java\/string\/countyz","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"String","title":"EqualIsNot","dsc":"Given a string, return true if the number of appearances of \"is\" anywhere in the string is equal\r\n to the number of appearances of \"not\" anywhere in the string (case sensitive).\r","code":"public boolean equalIsNot(String str) \n{\n\n  int idx = -2;\n  int count1 = 0;\n\n  while( idx != -1)\n  {\n\n    idx = str.indexOf(\"is\",idx+2);\n    count1++;\n\n  }\n\n  idx = -3;\n  while( idx != -1)\n  {\n\n    idx = str.indexOf(\"not\",idx+3);\n    count1--;\n\n  }\n\n\n  return count1 ==0;\n\n}","permLink":"java\/string\/equalisnot","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"Fix34","dsc":"Return an array that contains exactly the same numbers as the given array,\nbut rearranged so that every 3 is immediately followed by a 4.\nDo not move the 3's, but every other number may move.\nThe array contains the same number of 3's and 4's, every 3\nhas a number after it that is not a 3 or 4, and a 3 appears in the\narray before any 4.","code":"public int[] fix34(int[] nums)\n{\n\n  ArrayList arr = new ArrayList();\n\n  for(int i =0; i < nums.length; i++)\n  {\n    if(nums[i] == 4) arr.add(i);\n  }\n\n\n  for(int j=0; j < nums.length; j++)\n  {\n     if(nums[j] == 3)\n         {\n           nums[arr.get(0)] = nums[j+1];\n           arr.remove(0);\n           nums[j+1] = 4;\n         }\n  }\n\n  return nums;\n\n}","permLink":"java\/arrays\/fix34","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"LoneSum","dsc":"Given 3 int values, a b c, return their sum.\r\nHowever, if one of the values is the same as\r\nanother of the values, it does not count towards the sum.","code":"public int loneSum(int a, int b, int c)\n{\n  int sum = 0;\n  if(a==b && a ==C) return sum;\n\n  sum = a;\n\n  if(sum != b) sum += b;\n  if(sum != c) sum += c;\n\n\n\n\n  return sum;\n\n\n}","permLink":"java\/arrays\/lonesum","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"String","title":"MaxBlock","dsc":"Given a string, return the length of the largest \"block\" in the string.\r\nA block is a run of adjacent chars that are the same.","code":"public int maxBlock(String str){\nint ct1 = 0;\nint ct2 = 0;\n\n\nfor(int i =0; i <str.length(); i++)\n{\n    if(ct1 > ct2) ct2 = ct1;\n\n    ct1 = 0;\n    for(int j =i; j <str.length();j++)\n    {\n       if(str.charAt(i) == str.charAt(j))\n       ct1++;\n       else break;\n    }\n\n}\n\nreturn ct2;\n\n}","permLink":"java\/string\/maxblock","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"String","title":"MirrorEnds","dsc":"Given a string, look for a mirror image (backwards) string at both the beginning\r\nand end of the given string. In other words, zero or more characters at\r\nthe very begining of the given string, and at the very end of the string\r\nin reverse order (possibly overlapping). For example, the string \"abXYZba\"\r\nhas the mirror end \"ab\".","code":"public String mirrorEnds(String string) {\r\n  int len = string.length();\r\n  String rtStr =\"\";\r\n\r\n    if(len ==0) rtStr = string;\r\n    else{\r\n      for(int i =0; i < len; i++){\r\n        if( string.charAt(i) == string.charAt(len-i-1)){\r\n          rtStr += string.charAt(i);\r\n        }\r\n        else break;\r\n      }\r\n    }\r\n    return rtStr;\r\n}","permLink":"java\/string\/mirrorends","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"Fix45","dsc":"(This is a slightly harder version of the fix34 problem.) Return an array that\r\ncontains exactly the same numbers as the given array, but rearranged so that every 4\r\nis immediately followed by a 5. Do not move the 4's, but every other number may move.\r\nThe array contains the same number of 4's and 5's, and every 4 has a number after it that\r\nis not a 4. In this version, 5's may appear anywhere in the original array.","code":"public int[] fix45(int[] nums)\n{\n  int len = nums.length;\n  ArrayList fives = new ArrayList();\n\n\n  for(int i =0; i < len; i++)\n      if(nums[i] == 5 )\n      {\n        if(i == 0 )              fives.add(i);\n        else if( nums[i-1] != 4) fives.add(i);\n      }\n\n\n\n\n  for(int j = 0; j<len; j++)\n  {\n     if(nums[j] == 4 && nums[j+1] != 5)\n     {\n       nums[(Integer)fives.get(0)] = nums[j+1];\n       fives.remove(0);\n       nums[j+1] = 5;\n\n     }\n\n\n  }\n\n\n  return nums;\n\n}","permLink":"java\/arrays\/fix45","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"NoTeenSum","dsc":"Given 3 int values, a b c, return their sum. However,\nif any of the values is a teen -- in the range 13..19 inclusive\n-- then that value counts as 0, except 15 and 16 do not count\nas a teens. Write a separate helper \"public int fixTeen(int n)\n{\"that takes in an int value and returns that value fixed for the\nteen rule. In this way, you avoid repeating the teen code 3 times (i.e. \"decomposition\").\nDefine the helper below and at the same indent level as the main noTeenSum().","code":"public int noTeenSum(int a, int b, int c) {\n  return fixteen(a) + fixteen(b) + fixteen(c);\n}\n\npublic int fixteen(int num) {\n  if(num >= 13 && num <= 19)\n     if(num == 15 || num == 16) return num;\n     else                       return 0;\n  else                           return num;\n}","permLink":"java\/arrays\/noteensum","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"RoundSum","dsc":"For this problem, we'll round an int value up to the next multiple of 10\r\nif its rightmost digit is 5 or more, so 15 rounds up to 20. Alternately,\r\nround down to the previous multiple of 10 if its rightmost digit is less\r\nthan 5, so 12 rounds down to 10. Given 3 ints, a b c, return the sum of their\r\nrounded values. To avoid code repetition, write a separate helper \"public int round10(int num)\r\n{\" and call it 3 times. Write the helper entirely below and at the same indent level as roundSum().","code":"public int roundSum(int a, int b, int c) {\n  return round10(a) + round10(b) + round10(c);\n}\n\npublic int round10(int num) {\n\n  int n1 = num % 10;\n\n  if(n1 >=5 && n1 <=9) return num - n1 + 10;\n  else                 return num - n1;\n\n}","permLink":"java\/arrays\/roundsum","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"String","title":"SameEnds","dsc":"Given a string, return the longest substring that appears at both the beginning and end of the string without overlapping. For example, sameEnds(\"abXab\") is \"ab\".","code":"public String sameEnds(String string)\n{\n\n        int len = string.length();\n        String rtStr =\"\";\n        int loopstopper = len\/2;\n        int ct = len%2==0?0:1;\n        String word1 = string.substring(0,loopstopper);\n        String word2 = string.substring(loopstopper+ct);\n\n\n        for(int i=0; i <loopstopper;i++)\n        {\n            if( word1.equals(word2))\n            {\n                rtStr = word1;\n                break;\n            }\n\n\n\n            word1 = word1.substring(0,word1.length()-1);\n            word2 = word2.substring(word2.length()+1 - word2.length());\n        }\n\n\nreturn rtStr;\n\n}","permLink":"java\/string\/sameends","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"AP-1","title":"Scores100","dsc":"Given an array of scores, return true if there are scores of 100 next to each other in the array. The array length will be at least 2.","code":"public boolean scores100(int[] scores) {\n\n  Boolean flag = false;\n\n  for(int i=0; i < scores.length - 1; i++)\n  {\n     if(scores[i] == 100 && scores[i+1] == 100)\n     {\n       flag = true;\n\n     }\n\n\n  }\n\n  return flag;\n}","permLink":"java\/ap-1\/scores100","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"AP-1","title":"ScoresIncreasing","dsc":"Given an array of scores, return true if each score is equal or greater than the one before. The array will be length 2 or more.","code":"public boolean scoresIncreasing(int[] scores) {\n\n  Boolean flag = false;\n\n  for(int i= scores.length - 1; i >1; i--)\n  {\n     if(scores[i] >= scores[i-1])\n     {\n        flag = true;\n\n     }\n\n     else\n     {\n        flag = false;\n        break;\n\n     }\n\n  }\n\n  return flag;\n\n}","permLink":"java\/ap-1\/scoresincreasing","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"AP-1","title":"ScoreUp","dsc":"The \"key\" array is an array containing the correct answers to an exam, like {\"a\", \"a\", \"b\", \"b\"}. the \"answers\" array contains a student's answers, with \"?\" representing a question left blank. The two arrays are not empty and are the same length. Return the score for this array of answers, giving +4 for each correct answer, -1 for each incorrect answer, and +0 for each blank answer.","code":"public int scoreUp(String[] key, String[] answers) {\n\n  int ct = 0;\n\n  for(int i=0; i < key.length; i++)\n  {\n      if(key[i].equals(answers[i]))\n      {\n         ct += 4;\n      }\n\n      else\n      {\n         if( !(answers[i].equals(\"?\")))\n          {\n             ct= ct -1;\n\n          }\n\n      }\n\n  }\n\n  return ct;\n}","permLink":"java\/ap-1\/scoreup","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"SeriesUp","dsc":"Given n>=0, create an array with the pattern {1,    1, 2,    1, 2, 3,   ... 1, 2, 3 .. n}\r\n(spaces added to show the grouping). Note that the length of the array will be 1 + 2 + 3 ... + n,\r\nwhich is known to sum to exactly n*(n + 1)\/2.","code":"public int[] seriesUp(int n)\n{\n   int[] arr = new int[n*(n+1)\/2];\n   int num =0;\n   int idx = -1;\n\n   for(int i=0; i < n; i++)\n   {\n     num =0;\n     for(int j= idx + 1 ;  ; j++)\n     {\n        arr[j] = ++num;\n\n        if(i+1 == num)\n        {\n           idx = j;\n           break;\n        }\n\n     }\n   }\n\n return arr;\n\n}","permLink":"java\/arrays\/seriesup","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"Arrays","title":"SquareUp","dsc":"Given n>=0, create an array length n*n with the following pattern,\r\nshown here for n=3 : {0, 0, 1,    0, 2, 1,    3, 2, 1} (spaces added to show the 3 groups).","code":"public int[] squareUp(int n)\n{\n  int[] arr = new int[n*n];\n        int num = 0;\n\n      for(int i= n; i > 0; i--)\n      {\n         num = 0;\n         for(int j = (n * i) - 1;  ;j--)\n         {\n             arr[j] = ++num;\n             if(num == i) break;\n         }\n      }\n\n\nreturn arr;\n}","permLink":"java\/arrays\/squareup","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"String","title":"SumDigits","dsc":"Given a string, return the sum of the digits 0-9 that appear in the string,\r\nignoring all other characters. Return 0 if there are no digits in the string.\r\n(Note: Character.isDigit(char) tests if a char is one of the chars '0', '1', .. '9'. Integer.parseInt(string)\r\nconverts a string to an int.) ","code":"public int sumDigits(String str)\n{\nint sum = 0;\n\n  for(int i=0; i < str.length();i ++)\n  {\n\n   if(Character.isDigit(str.charAt(i)))\n   {\n     sum += Integer.parseInt(str.substring(i,i+1));\n\n    }\n  }\n\n  return sum;\n}","permLink":"java\/string\/sumdigits","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"AP-1","title":"SumHeights","dsc":"We have an array of heights, representing the altitude along a walking trail. Given start\/end indexes into the array, return the sum of the changes for a walk beginning at the start index and ending at the end index. For example, with the heights {5, 3, 6, 7, 2} and start=2, end=4 yields a sum of 1 + 5 = 6. The start end end index will both be valid indexes into the array with start <= end.","code":"public int sumHeights(int[] heights, int start, int end) {\n\n  int acc =0;\n\n  for(int i= start; start <= end -1; start++   )\n  {\n     acc += Math.abs(heights[start] - heights[start + 1]  );\n\n  }\n\n  return acc;\n}","permLink":"java\/ap-1\/sumheights","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"String","title":"SumNumbers","dsc":"Given a string, return the sum of the numbers appearing in the string, ignoring all other characters.\r\n A number is a series of 1 or more digit chars in a row. (Note: Character.isDigit(char) tests if a char\r\n is one of the chars '0', '1', .. '9'. Integer.parseInt(string) converts a string to an int.)","code":"public int sumNumbers(String str)\n{\n\n  int sum = 0;\n  String tmp = \"\";\n\n  for(int i =0; i < str.length();i++)\n  {\n    if( Character.isDigit(str.charAt(i)))  tmp += str.charAt(i);\n\n    else\n    {\n       if(!tmp.equals(\"\"))\n       sum += Integer.parseInt(tmp);\n       tmp = \"\";\n    }\n\n    if(i+1 == str.length())\n    {\n     if(!tmp.equals(\"\"))\n      sum += Integer.parseInt(tmp);\n    }\n\n  }","permLink":"java\/string\/sumnumbers","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"String","title":"WithoutString","dsc":"Given two strings, base and remove, return a version of the base string where all instances\r\nof the remove string have been removed (not case sensitive). You may assume that the remove\r\nstring is length 1 or more. Remove only non-overlapping instances, so with \"xxx\" removing \"xx\" leaves \"x\".","code":"public String withoutString(String base, String remove)\r\n{\r\n\r\n\r\n  return base.replaceAll(\"(?i)\"+remove,\"\");\r\n\r\n}","permLink":"java\/string\/withoutstring","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"AP-1","title":"WordsCount","dsc":"Given an array of strings, return the count of the number of strings with the given length.","code":"public int wordsCount(String[] words, int len) {\n\n  int ct = 0;\n\n  for(int i=0; i < words.length; i++)\n  {\n      if(words[i].length() == len)\n      {\n         ct++;\n\n      }\n  }\n\n  return ct;\n\n}","permLink":"java\/ap-1\/wordscount","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"AP-1","title":"WordsFront","dsc":"Given an array of strings, return a new array containing the first N strings. N will be in the range 1..length.","code":"public String[] wordsFront(String[] words, int n) {\r\n\r\n  String[] rt = new String[n];\r\n\r\n  for(int i=0; i < n;i++){\r\n    rt[i] = words[i];\r\n  }\r\n  \r\n  return rt;\r\n}","permLink":"java\/ap-1\/wordsfront","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"codingbat","lng":"Java","module":"AP-1","title":"WordsWithoutList","dsc":"Given an array of strings, return a new List (e.g. an ArrayList) where all the strings of the given length are omitted. See wordsWithout() below which is more difficult because it uses arrays.","code":"public List wordsWithoutList(String[] words, int len) {\n\n    List<String> ls = new ArrayList<String>();\n\n    for(int i = 0; i < words.length; i++)\n    {\n        if(words[i].length() != len)\n        {\n           ls.add(words[i]);\n\n        }\n\n\n    }\n\n  return ls;\n}","permLink":"java\/ap-1\/wordswithoutlist","hasCode":"1","platform_url":"https:\/\/codingbat.com\/java"},
    {"platform":"hackerrank","lng":"sql","module":"MYSQL","title":"MYSQL","dsc":"sql\/mysql\/select-query-i,Select Query I","code":"","permLink":"mysql","hasCode":"0","platform_url":""},
    {"platform":"hackerrank","lng":"sql","module":"MYSQL","title":"Select Query I","dsc":"Query all columns for all American cities in the CITY table with populations larger than 100000. The CountryCode for America is USA.","code":"select * from CITY where COUNTRYCODE = 'USA' and POPULATION > 100000","permLink":"sql\/mysql\/select-query-i","hasCode":"1","platform_url":"https:\/\/www.hackerrank.com\/"}
  ]
export {apiData}
